# Generated by Django 5.2.7 on 2025-10-07 03:47

import common.models.auth
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('is_menu', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': '1. Toifa',
                'verbose_name_plural': '1. Toifalar',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ism', models.CharField(max_length=56)),
                ('phone', models.CharField(max_length=56)),
                ('xabar', models.TextField()),
                ('is_trash', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '5. Aloqa',
                'verbose_name_plural': '5. Aloqalar',
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=15)),
                ('key', models.CharField(max_length=256)),
                ('is_expired', models.BooleanField(default=False)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('by', models.CharField(choices=[('login', 'Login'), ('regis', 'Register')])),
                ('extra', models.JSONField(default=dict)),
                ('tries', models.SmallIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('is_trash', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '4. Obuna',
                'verbose_name_plural': '4. Obunalar',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('fullname', models.CharField(max_length=56)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('user_type', models.SmallIntegerField(choices=[(1, 'Admin'), (2, 'User')], default=2, verbose_name='Admin(1), User(2)')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', common.models.auth.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('short_desc', models.TextField()),
                ('description', models.TextField()),
                ('image1', models.ImageField(upload_to='news/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='news/')),
                ('tags', models.CharField(max_length=100)),
                ('create', models.DateTimeField(auto_now_add=True)),
                ('views', models.PositiveIntegerField(default=0, editable=False)),
                ('ctg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.category')),
            ],
            options={
                'verbose_name': '2. Yangi',
                'verbose_name_plural': '2. Yangiliklar',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('post', models.DateTimeField(auto_now_add=True)),
                ('is_sub', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subs', to='common.comment')),
                ('new', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='common.new')),
            ],
            options={
                'verbose_name': '3. Izoh',
                'verbose_name_plural': '3. Izohlar',
            },
        ),
    ]
